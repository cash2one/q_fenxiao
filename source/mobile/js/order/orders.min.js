/*
waiting_pay = tmp_query.filter(Orders.status==1,Orders.pay_status==0).count()#待付款
waiting_deliver = tmp_query.filter(Orders.pay_status==1,Orders.delivery_status==0).count()#待发货
waiting_recieve = tmp_query.filter(Orders.pay_status==1,Orders.delivery_status==1).count()#待收货
waiting_assess = tmp_query.filter(Orders.delivery_status==2,Orders.is_assess==False).count()#待评价
*/
;;(function(){
    ht.orders={
        list:{
            init:function(){
                var myState=ht.core.getQuery('state');
                if(myState){
                    ht.orders.list.state=myState;
                }
                console.log(myState);
                ht.core.dialog.init();
                this.getFirstData();
                this.bindEvent();
                this.compileTempl();
            },
            getOrderStatus:function(status,pay_status,delivery_status){
                if(status==1){
                    if (pay_status==0){
                        return this.getOStatus(0);
                    }else if (pay_status==1){
                        if(delivery_status==0){
                            return this.getOStatus(1);
                        }else if(delivery_status==1){
                            return this.getOStatus(2);
                        }else if(delivery_status==2){
                            return this.getOStatus(4);
                        }
                    }
                }else if(status==2){
                    return this.getOStatus(4);
                }else if(status==3){
                    return this.getOStatus(6);
                }else if(status==4){
                    return this.getOStatus(6);
                }

            },
            getOStatus:function(_status){
                var map ={
                    '0':'等待付款',//待付款订单
                    '1':'等待发货',//待发款订单
                    '2':'已发货',
                    '3':'确认收货',//待收货订单
                    '4':'交易成功',
                    '5':'交易失败',
                    '6':'交易关闭'
                }
                var obj={
                    "key":_status,
                    "txt":map[_status+'']
                };
                return obj;
            },
            getFirstData:function(){
                var _this=this;
                this.getData(function(){
                    _this.getMoreData();
                });
            },
            compileTempl:function(){
                var markTabs='<ul class="tr"><li class="td f-tac tab {{if index==0}}tab-cur{{/if}} "><span>全部</span></li><li class="td f-tac tab {{if index==1}}tab-cur{{/if}} "><span class="ordertype">待付款 {{if waiting_pay>0}}<span class="ordercount">{{if waiting_pay>99}}99+{{else}}{{= waiting_pay}}{{/if}}</span>{{/if}}</span> </li> <li class="td f-tac tab  {{if index==2}}tab-cur{{/if}} "><span class="ordertype">待发货{{if waiting_deliver>0}}<span class="ordercount">{{if waiting_deliver>99}}99+{{else}}{{= waiting_deliver}}{{/if}}</span>{{/if}}</span>  </li> <li class="td f-tac tab  {{if index==3}}tab-cur{{/if}} "><span class="ordertype">待收货{{if waiting_recieve>0}}<span class="ordercount">{{if waiting_recieve>99}}99+{{else}}}{{= waiting_recieve}}{{/if}}</span>{{/if}}</span> </li> </ul>';
                $.template( "orderTabsTemplate", markTabs );
            },
            parseData:function(result){
                var date2StrSecond= QTIMES.date.date_to_str("%Y-%m-%d %H:%i:%s");//删除时需要时分秒
                var goodsCount=0;
                for(var i= 0,oLen=result.length;i<oLen;i++){
                    result[i].oTime=date2StrSecond(new Date(result[i].gmt_created*1000));
                    goodsCount=0;
                    for(var m= 0,gLen=result[i].items.length;m<gLen;m++){
                        result[i].items[m].goodPhoto=ht.core.getOnePic(result[i].items[m].main_pic);
                        goodsCount=goodsCount+result[i].items[m].buy_nums;
                        result[i].items[m].order_no=result[i].order_no;
                        result[i].items[m].order_id=result[i].id;
                    }
                    result[i].goodsCount=goodsCount;
                    var getOrderStatus=this.getOrderStatus(result[i].status,result[i].pay_status,result[i].delivery_status)
                    result[i].orderStatusText=getOrderStatus.txt;
                    result[i].tomsOrderStatus=getOrderStatus.key;
                }
                return result;
            },
            getData:function(callback){
                if(ht.orders.list.hasLoaded==1){
                    $('#m-listloading').hide();
                    return;
                }
                var _this=this;
                var param={
                    page:ht.orders.list.page,
                    state:ht.orders.list.state==0?'':ht.orders.list.state,
                    _xsrf:$('input[name=_xsrf]').val()
                }
                $.post('/order/orders.html',param,function(r){
                    $('#m-listloading').hide();
                    var dataResult=JSON.parse(r);
                    if(dataResult.state==200){
                        var dataOrder=dataResult.data.result;
                        _this.objOrderTabs={
                            index:ht.orders.list.state,
                            waiting_pay:dataResult.waiting_pay,
                            waiting_deliver:dataResult.waiting_deliver,
                            waiting_assess:dataResult.waiting_assess,
                            waiting_recieve:dataResult.waiting_recieve
                        }
                        $('#orderTab').empty();
                        $.tmpl('orderTabsTemplate', _this.objOrderTabs).appendTo('#orderTab');
                        if(dataOrder.length==0){
                            ht.orders.list.hasLoaded=1;
                            if($('#m-orderbox .m-orderitem').length==0){
                                $('#emptyOrder').show();
                            }
                            return;
                        }
                        dataOrder=_this.parseData(dataOrder);
                        $('#templateOrderList').tmpl(dataOrder).appendTo('#m-orderbox');
                        ht.core.lazyLoad();
                        ht.orders.list.page++;
                        callback && callback();
                    }else{

                    }
                })
            },
            page:1,
            objOrderTabs:{},
            state:'',
            hasLoaded:0,
            getMoreData:function(){
                var $waterLoading=$('#m-listloading');
                ht.core.waterFall(200,$waterLoading,function(){
                    ht.orders.list.getData(function(){
                        $waterLoading.hide();
                    });
                });
            },
            changeObjOrderTabs:function(tomsStatus){
                this.setObjOrderTabs(tomsStatus);
                this.setTabsCount(this.objOrderTabs);
            },
            setObjOrderTabs:function(tomsStatus){
                switch (tomsStatus){
                    case "0":
                        this.objOrderTabs.waiting_pay=this.objOrderTabs.waiting_pay>0?(parseInt(this.objOrderTabs.waiting_pay,10)-1):this.objOrderTabs.waiting_pay;
                        break;
                    case "1":
                        this.objOrderTabs.waiting_deliver=this.objOrderTabs.waiting_deliver>0?(parseInt(this.objOrderTabs.waiting_deliver,10)-1):this.objOrderTabs.waiting_deliver;
                        break;
                    case "3":
                        this.objOrderTabs.waiting_recieve=this.objOrderTabs.waiting_recieve>0?(parseInt(this.objOrderTabs.waiting_recieve,10)-1):this.objOrderTabs.waiting_recieve;
                        break;
                }
            },
            setTabsCount:function(objOrderTabs){
                $('#orderTab').empty();
                $.tmpl('orderTabsTemplate', objOrderTabs).appendTo('#orderTab');
                if($('#m-orderbox .m-orderitem').length==0){
                    $('#emptyOrder').show();
                }
            },
            bindEvent:function(){
                var _this=this;
                var dataUremove = [
                    { _aniClass:'show',confirm: {text: "你收到包裹了吗？",btns: [{text: "确定",action: "ok"}, {text: "取消",action: "close"}]}}
                ];
                var dataUCancel = [
                    { _aniClass:'show',confirm: {text: "你确定取消订单吗？",btns: [{text: "确定",action: "ok"}, {text: "取消",action: "close"}]}}
                ];
                $('#orders').on('click','.tab',function(){
                    $('#m-listloading').show();
                    $('#emptyOrder').hide();
                    var index=$(this).index();
                    $('#m-orderbox').empty();
                    ht.orders.list.hasLoaded=0;
                    ht.orders.list.page=1;
                    ht.orders.list.state=index;
                    _this.getData();
                }).on('click','.confirmReceipt',function(){
                    var $this=$(this);
                    var $root=$this.closest('.m-orderitem');
                    var tomsStatus=$root.attr('order-tomsStatus');
                    ht.core.dialog.show(dataUremove);
                    $('body').on('click','#m-dialog .ok',function(){
                        var order_no=$root.attr('data-no');
                        var order_Id=$root.attr('data-id');
                        var param={
                            _xsrf:$('input[name=_xsrf]').val()
                        }
                        $.ajax({
                            url: '/member/order_'+order_Id+'.html',
                            data:param,
                            type: 'PUT',
                            success: function(r) {
                                r=JSON.parse(r);
                                if(r.state==200){
                                    _this.changeObjOrderTabs(tomsStatus);
                                    $this.remove();
                                    $root.find('.m-btnbox').append('<a href="javascript:void(0)" class="u-btn2 m-orderbtn hasRecive">交易成功</a>');
                                    ht.core.dialog.hide();
                                }
                            }
                        });
                    });
                }).on('click','.cancelOrder',function(){
                    var $this=$(this);
                    var $root=$this.closest('.m-orderitem');
                    var tomsStatus=$root.attr('order-tomsStatus');
                    ht.core.dialog.show(dataUCancel);
                    $('body').on('click','#m-dialog .ok',function(){
                        var order_no=$root.attr('data-no');
                        var order_Id=$root.attr('data-id');
                        var param={
                            _xsrf:$('input[name=_xsrf]').val()
                        }
                        $.ajax({
                            url: '/member/order_'+order_Id+'.html',
                            data:param,
                            type: 'DELETE',
                            success: function(r) {
                                r=JSON.parse(r);
                                if(r.state==200){
                                    _this.changeObjOrderTabs(tomsStatus);
                                    $this.remove();
                                    $root.find('.ordertype').html('交易关闭');
                                    $root.find('.m-btnbox').html('<a href="javascript:void(0)" class="u-btn2 m-orderbtn u-btn3-yq">交易关闭</a>');
                                    ht.core.dialog.hide();
                                }
                            }
                        });
                    });
                });



            }
        }
    }
})();
$(function(){
    ht.orders.list.init();
});